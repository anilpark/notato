<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0e83eb3c-7445-4ba2-ab39-ba2826738964" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/client/public/NotatoLogo.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/api.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/assets/NotatoLogo.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/components/AuthForm/auth-form.test.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/components/AuthForm/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/components/Header/Header.test.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/components/Header/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/components/Logo/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/components/Notes/FoldersList.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/components/Notes/NoteCard.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/components/Notes/NoteModal.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/components/Notes/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/components/common/Loader.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/interfaces/folder.interface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/interfaces/note.interface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/interfaces/tag.interface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/interfaces/user.interface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/utils/setAuthToken.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client/src/utils/truncate.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/app.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/app.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/app.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/app.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/auth/auth.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/auth/auth.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/auth/auth.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/auth/auth.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/auth/auth.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/auth/auth.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/auth/dto/login.dto.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/auth/dto/login.dto.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/auth/dto/register.dto.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/auth/dto/register.dto.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/auth/guards/jwt-auth.guard.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/auth/guards/jwt-auth.guard.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/auth/jwt-payload.interface.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/auth/jwt-payload.interface.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/auth/strategies/jwt.strategy.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/auth/strategies/jwt.strategy.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/common/decorators/swagger.decorators.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/common/decorators/swagger.decorators.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/config/jwt.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/config/jwt.config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/folders/dto/folder.dto.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/folders/dto/folder.dto.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/folders/folder.interface.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/folders/folder.interface.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/folders/folder.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/folders/folder.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/folders/folders.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/folders/folders.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/folders/folders.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/folders/folders.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/folders/folders.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/folders/folders.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/main.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/main.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/notes/dto/note.dto.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/notes/dto/note.dto.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/notes/dto/update-note.dto.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/notes/dto/update-note.dto.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/notes/note.interface.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/notes/note.interface.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/notes/note.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/notes/note.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/notes/notes.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/notes/notes.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/notes/notes.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/notes/notes.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/notes/notes.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/notes/notes.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/tags/dto/tag.dto.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/tags/dto/tag.dto.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/tags/tag.interface.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/tags/tag.interface.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/tags/tag.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/tags/tag.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/tags/tags.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/tags/tags.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/tags/tags.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/tags/tags.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/tags/tags.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/tags/tags.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/users/user.interface.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/users/user.interface.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/users/user.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/users/user.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/users/users.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/users/users.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/users/users.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/users/users.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/users/users.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/users/users.service.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2OSNA8cmCQgCPAuHKCB3447gPyo" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/Users/ukrlan/dev/notato/client/public",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "/Users/ukrlan/dev/notato/client/node_modules/react-scripts",
    "nodejs_package_manager_path": "npm",
    "prettierjs.PrettierConfiguration.Package": "/Users/ukrlan/dev/notato/api/node_modules/prettier",
    "settings.editor.selected.configurable": "settings.javascript.prettier",
    "ts.external.directory.path": "/Users/ukrlan/dev/notato/client/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/client/public" />
      <recent name="$PROJECT_DIR$/client/src/assets" />
      <recent name="$PROJECT_DIR$/api/src/tags" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/api/tests" />
      <recent name="$PROJECT_DIR$/api/src/folders" />
      <recent name="$PROJECT_DIR$/api/src/notes" />
      <recent name="$PROJECT_DIR$/api/test" />
      <recent name="$PROJECT_DIR$/api/src/users" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.Renders logo">
    <configuration name="NotesController" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/api/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/api" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/api/src/notes/notes/notes.controller.spec.ts" />
      <test-names>
        <test-name value="NotesController" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Renders logo" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/client/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$/client" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/client/src/components/Header/Header.test.tsx" />
      <test-names>
        <test-name value="Renders logo" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="start:debug" type="js.build_tools.npm" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/api/package.json" />
      <command value="run" />
      <scripts>
        <script value="start:debug" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="test" type="js.build_tools.npm" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/api/package.json" />
      <command value="run" />
      <scripts>
        <script value="test" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Jest.Renders logo" />
      <item itemvalue="Jest.NotesController" />
      <item itemvalue="npm.test" />
      <item itemvalue="npm.start:debug" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.Renders logo" />
        <item itemvalue="Jest.NotesController" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0e83eb3c-7445-4ba2-ab39-ba2826738964" name="Changes" comment="" />
      <created>1681549876788</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1681549876788</updated>
      <workItem from="1681549877817" duration="64142000" />
      <workItem from="1681997452732" duration="16661000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>